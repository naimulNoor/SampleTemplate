apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

repositories {
    flatDir {
        dirs 'libs'
    }
}

android {

    compileSdkVersion 33
    //config
    defaultConfig {
        multiDexEnabled true
        applicationId "com.robialpha.android"
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 1 //working code
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    buildTypes {

        debug {
            multiDexEnabled true
            minifyEnabled false
            shrinkResources false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug

        }
        release {
            multiDexEnabled true
            minifyEnabled false   // Obfuscate and minify codes
            shrinkResources false // Remove unused resources
            // Remove unused codes
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

        }
    }
    bundle {
        language {
            enableSplit = false
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled = true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        jniLibs {
            keepDebugSymbols += ['*/mips/*.so', '*/mips64/*.so']
        }
        resources {
            excludes += ['META-INF/proguard/androidx-annotations.pro', 'META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0']
        }
    }
    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    coreLibraryDesugaring('com.android.tools:desugar_jdk_libs:2.0.2')

    implementation 'com.google.android.gms:play-services-auth-api-phone:18.0.1'
    implementation 'androidx.exifinterface:exifinterface:1.3.5'

    def androidx_version = '1.6.0'
    def legacy_support_version = '1.0.0'
    def material_version = '1.9.0-alpha01'
    def junit_version = '4.13.2'
    def constraint_layout_version = '2.0.4'

    //UI
    def card_view_version = '1.0.0'
    def recycler_view_version = '1.2.1'

    // TESTING
    def runner_version = '1.5.2'
    def espresso_version = '3.5.1'

    // Retrofit
    def retrofit_version = '2.9.0'
    def retrofit_loggingInterceptor = '5.0.0-alpha.11'
    def butterKnife_version = '10.2.3'

    // REACTIVE
    def rx_java_version = '2.2.21'
    def rx_android_version = '2.1.1'
    def rx_adapter_version = '2.9.0'

    // DAGGER 2
    def dagger_version = '2.44.2'

    // Image
    def picasso_version = '2.71828'
    def glide_version = '4.14.2'
    def okhttp_version = '2.7.5'
    def circle_image_view_version = '3.1.0'
    def image_cropper_version = '2.7.4'

    // FIRE_BASE
    def fire_base_messaging = '23.1.1'
    def fire_base_analytics = '21.2.0'
    def fire_base_crashlytics = '18.3.3'


    // ROOM DATABASE
    def room_version = '2.5.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //implementation 'com.android.support:multidex:2.0.1'
    implementation("androidx.multidex:multidex:2.0.1")


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidx_version"
    //implementation "androidx.legacy:legacy-support-v4:$legacy_support_version"
    //implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "com.google.android.material:material:$material_version"
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "androidx.room:room-testing:$room_version"


    // CARD_VIEW + RECYCLER_VIEW
    implementation "androidx.cardview:cardview:$card_view_version"
    implementation "androidx.recyclerview:recyclerview:$recycler_view_version"

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0" //new
    implementation "android.arch.lifecycle:extensions:1.1.1"

    // RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    kapt "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofit_loggingInterceptor"

    // RxJava and RxAndroid
    implementation "io.reactivex.rxjava2:rxjava:$rx_java_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rx_adapter_version"

    // ButterKnife - Dependency Injection
    implementation "com.jakewharton:butterknife:$butterKnife_version"
    kapt "com.jakewharton:butterknife-compiler:$butterKnife_version"

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger_version"
    //implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // FIRE_BASE
    implementation "com.google.firebase:firebase-crashlytics:$fire_base_crashlytics"
    implementation "com.google.firebase:firebase-analytics:$fire_base_analytics"
    implementation "com.google.firebase:firebase-messaging:$fire_base_messaging"


    // Picasso - Image Library
    implementation "com.squareup.picasso:picasso:$picasso_version"
    implementation "com.squareup.okhttp:okhttp:$okhttp_version"

    // Glide - Image Library
    implementation ("com.github.bumptech.glide:glide:$glide_version"){
        exclude group: "com.android.support"
    }
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //CircleImageView Library
    implementation "de.hdodenhof:circleimageview:$circle_image_view_version"



    // Image Cropper Library
    //implementation "com.theartofdev.edmodo:android-image-cropper:$image_cropper_version"


    // SSL Payment Gateway
    implementation(name: 'sslCommerzSdk',ext: 'aar')
    //compileOnly 'com.github.pengrad:jdk9-deps:1.0'

    // Facebook
    //implementation 'com.facebook.android:facebook-android-sdk:[5,6)'
    //implementation 'com.facebook.android:facebook-android-sdk:latest.release' //TODO:: remove for lower method
    implementation 'com.facebook.android:facebook-core:15.2.0'




    //3rd party
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:11.1.0'
    //robi-chat-bot
    //implementation 'io.kommunicate.sdk:kommunicateui:2.5.1'

    // Import the BoM for the Firebase platform
    //implementation platform('com.google.firebase:firebase-bom:30.1.0')

    // Declare the dependency for the Performance Monitoring library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    // implementation 'com.google.firebase:firebase-perf-ktx'



}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
